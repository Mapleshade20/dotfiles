# NOTE: Generated by processing {{ yadm.source }}

{% if yadm.hostname == "turbostar" %}
{% else %}

stty erase 

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.config/zsh/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME=""
source /opt/homebrew/share/powerlevel10k/powerlevel10k.zsh-theme

{% endif %}

#  Aliases 
alias wget="wget --hsts-file='$XDG_CACHE_HOME/wget-hsts'"
alias zshconfig="nvim ~/.config/zsh/.zshrc\#\#template"
alias kittyconfig="nvim ~/.config/kitty/kitty.conf\#\#template"
alias cd="z"               # zoxide
alias vim="nvim"
alias vi="nvim"
alias lg="lazygit"
alias c="clear" 
alias fastfetch='fastfetch --logo-type kitty'
alias mkdir='mkdir -p'

alias l='eza -lh --icons=auto'                                         # long list
alias ls='eza -1 --icons=auto'                                         # short list
alias ll='eza -lha --icons=auto --sort=name --group-directories-first' # long list all
alias ld='eza -lhD --icons=auto'                                       # long list dirs
alias lt='eza --icons=auto --tree'                                     # list folder as tree

# Directory navigation shortcuts
alias ..='cd ..'
alias ...='cd ../..'
alias .3='cd ../../..'
alias .4='cd ../../../..'

# Aliases Subject to Change
alias g++="g++ -std=c++11"
alias spice="spicetify backup apply"
alias dot='lazygit --use-config-file "$XDG_CONFIG_HOME/yadm/lazygit.yml" --work-tree "$YADM_ROOT" --git-dir $XDG_DATA_HOME/yadm/repo.git'

# Environment Variables
export FZF_DEFAULT_COMMAND="fd --type f --max-depth 10 --hidden -E '**/go/pkg/' -E '**/mamba/pkgs/' -E '.cargo/'"
export HOMEBREW_AUTO_UPDATE_SECS=2629746

# Load custom zsh configuration
eval "$(zoxide init zsh)"

# Yazi file browser
function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

# Dig
digall() {
	dig "$1" A
	dig "$1" AAAA
}

# Different config for different hosts
{% if yadm.hostname == "turbostar" %}

alias ondae="sudo systemctl start dae"
alias offdae="sudo systemctl stop dae"
alias confdae="sudo nvim /etc/dae/config.dae"
alias logdae="sudo tail -f /var/log/dae.log | perl -pe 's/(_qname=|dialer=|network=)/\e[1;34m$&\e[0m/g; s/(reject)/\e[1;31m$&\e[0m/g; s/(mac="ac:74:b1:18:78:79")/\e[1;32m$&\e[0m/g; s/(ip=|sniffed=)/\e[1;33m$&\e[0m/g; s/(qtype=)/\e[1;35m$&\e[0m/g'"

{% else %}

alias ll="ls -al"
alias frpc='/opt/homebrew/opt/frpc/bin/frpc -c /opt/homebrew/etc/frp/frpc.toml'
export PATH="/opt/homebrew/opt/make/libexec/gnubin:$PATH"

plugins=(
  git sudo zsh-autosuggestions
  zsh-syntax-highlighting
)

source <(fzf --zsh)
[ ! -f "$HOME/.x-cmd.root/X" ] || . "$HOME/.x-cmd.root/X"
source $ZSH/oh-my-zsh.sh
# To customize prompt, run `p10k configure` or edit ~/.config/zsh/.p10k.zsh.
[[ ! -f ~/.config/zsh/.p10k.zsh ]] || source ~/.config/zsh/.p10k.zsh

# -----------------------------------------------------------------------------
# best fzf aliases ever
# Prerequisites: fd, ripgrep, fzf
_fuzzy_change_directory() {
    if ! command -v fd &>/dev/null; then
        echo "Error: 'fd' is not installed. Please install it to use this function." >&2
        echo "macOS: brew install fd" >&2
        echo "Debian/Ubuntu: sudo apt install fd-find" >&2
        return 1
    fi

    local initial_query="$1"
    local selected_dir
    local fzf_options=('--preview=ls -ap --color=always {}' '--preview-window=right:50%:wrap')
    fzf_options+=(--height "80%" --layout=reverse --cycle)
    local max_depth=8 # 可以适当增加深度，因为 fd 很快

    if [[ -n "$initial_query" ]]; then
        fzf_options+=("--query=$initial_query")
    fi

    # 使用 fd 替代 find
    # --type d: 只查找目录
    # --hidden: 包含隐藏目录 (例如 .config)
    # --no-ignore: 如果你想搜索被 .gitignore 忽略的目录，可以取消此行注释
    selected_dir=$(fd --type d --hidden --max-depth $max_depth --hidden . | fzf "${fzf_options[@]}")

    if [[ -n "$selected_dir" && -d "$selected_dir" ]]; then
        cd "$selected_dir" || return 1
    else
        return 1
    fi
}

_fuzzy_edit_search_file_content() {
    if ! command -v rg &>/dev/null; then
        echo "Error: 'ripgrep' (rg) is not installed. Please install it to use this function." >&2
        echo "macOS: brew install ripgrep" >&2
        echo "Debian/Ubuntu: sudo apt install ripgrep" >&2
        return 1
    fi

    local query="${1:-}"
    local selected_output
    local selected_file
    
    # 使用 ripgrep (rg) 替代 grep。rg 速度极快且默认遵守 .gitignore
    # --colors 'match:fg:black,match:bg:yellow': 设置 fzf 列表中的高亮颜色
    # --no-heading: 不显示头部信息
    # --line-number: 显示行号
    # --smart-case: 智能大小写匹配
    # 输出格式: "file:line:content"
    RG_CMD="rg --color=always --line-number --no-heading --smart-case '$query'"
    
    # fzf 预览命令
    # {1} 是文件名, {2} 是行号
    local preview_cmd
    if command -v "bat" &>/dev/null; then
        preview_cmd="bat --color=always --style=plain --highlight-line {2} {1}"
    else
        # cat 没有高亮功能，但依然可用
        preview_cmd="cat {1}"
    fi

    local fzf_options=(
        --ansi
        --delimiter ':'
        --height "80%"
        --layout=reverse
        --cycle
        --preview-window "right:50%:wrap"
        --preview "$preview_cmd"
        --bind "enter:become(echo {1})" # 回车时只输出文件名
    )

    # selected_output=$(eval "$RG_CMD" | fzf "${fzf_options[@]}")
    # 使用此方式可以更好地处理 query 中的特殊字符
    selected_output=$(
      FZF_DEFAULT_COMMAND="$RG_CMD" \
      fzf "${fzf_options[@]}"
    )


    if [[ -n "$selected_output" ]]; then
        # 从 "file:line:content" 中提取文件名
        selected_file=$(echo "$selected_output" | cut -d: -f1)
        if [[ -n "$selected_file" && -f "$selected_file" ]]; then
            if command -v "$EDITOR" &>/dev/null; then
                "$EDITOR" "$selected_file"
            else
                echo "EDITOR is not specified. using vim. (you can export EDITOR in ~/.zshrc)"
                vim "$selected_file"
            fi
        fi
    else
        echo "No file selected or search returned no results."
    fi
}

_fuzzy_edit_search_file() {
    if ! command -v fd &>/dev/null; then
        echo "Error: 'fd' is not installed. Please install it to use this function." >&2
        return 1
    fi

    local initial_query="$1"
    local selected_file
    local preview_cmd
    if command -v "bat" &>/dev/null; then
        preview_cmd=('bat --color always --style=plain --paging=never {}')
    else
        preview_cmd=('cat {}')
    fi
    local fzf_options=(--height "80%" --layout=reverse --cycle --preview-window right:50% --preview "${preview_cmd[*]}")
    local max_depth=7 # 可以适当增加深度

    if [[ -n "$initial_query" ]]; then
        fzf_options+=("--query=$initial_query")
    fi

    # -type f: 只查找文件
    # fd 默认排除 .git, node_modules 等目录
    selected_file=$(fd --type f --hidden --max-depth $max_depth . | fzf "${fzf_options[@]}")

    if [[ -n "$selected_file" && -f "$selected_file" ]]; then
        if command -v "$EDITOR" &>/dev/null; then
            "$EDITOR" "$selected_file"
        else
            echo "EDITOR is not specified. using vim. (you can export EDITOR in ~/.zshrc)"
            vim "$selected_file"
        fi
    else
        return 1
    fi
}

_fuzzy_search_cmd_history() {
  local selected
  setopt localoptions noglobsubst noposixbuiltins pipefail no_aliases noglob nobash_rematch 2> /dev/null

  local fzf_query=""
  if [[ -n "$1" ]]; then
    fzf_query="--query=${(qqq)1}"
  else
    fzf_query="--query=${(qqq)LBUFFER}"
  fi

  if zmodload -F zsh/parameter p:{commands,history} 2>/dev/null && (( ${+commands[perl]} )); then
    selected="$(printf '%s\t%s\000' "${(kv)history[@]}" |
      perl -0 -ne 'if (!$seen{(/^\s*[0-9]+\**\t(.*)/s, $1)}++) { s/\n/\n\t/g; print; }' |
      FZF_DEFAULT_OPTS=$(__fzf_defaults "" "-n2..,.. --scheme=history --bind=ctrl-r:toggle-sort --wrap-sign '\t↳ ' --highlight-line ${FZF_CTRL_R_OPTS-} $fzf_query +m --read0") \
      FZF_DEFAULT_OPTS_FILE='' $(__fzfcmd))"
  else
    selected="$(fc -rl 1 | __fzf_exec_awk '{ cmd=$0; sub(/^[ \t]*[0-9]+\**[ \t]+/, "", cmd); if (!seen[cmd]++) print $0 }' |
      FZF_DEFAULT_OPTS=$(__fzf_defaults "" "-n2..,.. --scheme=history --bind=ctrl-r:toggle-sort --wrap-sign '\t↳ ' --highlight-line ${FZF_CTRL_R_OPTS-} $fzf_query +m") \
      FZF_DEFAULT_OPTS_FILE='' $(__fzfcmd))"
  fi
  local ret=$?
  if [ -n "$selected" ]; then
    if [[ $(__fzf_exec_awk '{print $1; exit}' <<< "$selected") =~ ^[1-9][0-9]* ]]; then
      zle vi-fetch-history -n $MATCH
    else
      LBUFFER="$selected"
    fi
  fi
  return $ret
}

alias ffec='_fuzzy_edit_search_file_content' \
    ffcd='_fuzzy_change_directory' \
    ffe='_fuzzy_edit_search_file'

zle -N _fuzzy_search_cmd_history
bindkey '^R' _fuzzy_search_cmd_history
# -----------------------------------------------------------------------------
{% endif %}
